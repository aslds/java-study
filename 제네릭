//문제 21-1-문제1
class DBox<L,R>{
	private L left;
	private R right;
	
	public void set(L o,R r) {
		left=o;
		right=r;
	}
	
	@Override
	public String toString() {return left+" & "+right;}
}
class DDBox<U,D>{
	private U up;//여기에 DBox<String, Integer>전달
	private D down;//여기에 DBox<String, Integer>전달
	
	public void set(U up,D down) {
		this.up=up;
		this.down=down;
	}
	
	@Override
    public String toString() {
        return up+ "\n" + down;//up 자체가 DBox<String, Integer>이므로 특별하게 뭘 하지 않아도 Apple & 25이런식으로 출력가능.
    }
}
class scannerex{
	public static void main(String args[]) {
		  DBox<String, Integer> box1 = new DBox<>();
	        box1.set("Apple", 25);

	        DBox<String, Integer> box2 = new DBox<>();
	        box2.set("Orange", 33);
	        
	        DDBox<DBox<String, Integer>, DBox<String, Integer>> ddbox = new DDBox<>();
	        ddbox.set(box1, box2);

	        System.out.println(ddbox);
	}
}


//문제 21-2
class Box<T> {
    private T ob;
    
    public void set(T o) { 
        ob = o; 
    }
    
    public T get() { 
        return ob; 
    }
}

class scannerex{
    public static <T extends Number> void swapBox(Box<T> box1, Box<T> box2) {
        T temp = box1.get();//temp는 box1
        box1.set(box2.get());//box1==box2
        box2.set(temp);//box2==temp
    }

    public static void main(String[] args) {
        Box<Integer> box1 = new Box<>();
        box1.set(99);

        Box<Integer> box2 = new Box<>();
        box2.set(55);

        System.out.println(box1.get() + " & " + box2.get());
        swapBox(box1, box2);
        System.out.println(box1.get() + " & " + box2.get());
    }
}
