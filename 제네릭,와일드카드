//문제 21-1-문제1
class DBox<L,R>{
	private L left;
	private R right;
	
	public void set(L o,R r) {
		left=o;
		right=r;
	}
	
	@Override
	public String toString() {return left+" & "+right;}
}
class DDBox<U,D>{
	private U up;//여기에 DBox<String, Integer>전달
	private D down;//여기에 DBox<String, Integer>전달
	
	public void set(U up,D down) {
		this.up=up;
		this.down=down;
	}
	
	@Override
    public String toString() {
        return up+ "\n" + down;//up 자체가 DBox<String, Integer>이므로 특별하게 뭘 하지 않아도 Apple & 25이런식으로 출력가능.
    }
}
class scannerex{
	public static void main(String args[]) {
		  DBox<String, Integer> box1 = new DBox<>();
	        box1.set("Apple", 25);

	        DBox<String, Integer> box2 = new DBox<>();
	        box2.set("Orange", 33);
	        
	        DDBox<DBox<String, Integer>, DBox<String, Integer>> ddbox = new DDBox<>();
	        ddbox.set(box1, box2);

	        System.out.println(ddbox);
	}
}

-----------------------------------------------------------------------------------------------------------------------------------------------------

//문제 21-2
class Box<T> {
    private T ob;
    
    public void set(T o) { 
        ob = o; 
    }
    
    public T get() { 
        return ob; 
    }
}
class scannerex{
    public static <T extends Number> void swapBox(Box<T> box1, Box<T> box2) {
        T temp = box1.get();//temp는 box1
        box1.set(box2.get());//box1==box2
        box2.set(temp);//box2==temp
    }

    public static void main(String[] args) {
        Box<Integer> box1 = new Box<>();
        box1.set(99);

        Box<Integer> box2 = new Box<>();
        box2.set(55);

        System.out.println(box1.get() + " & " + box2.get());
        swapBox(box1, box2);
        System.out.println(box1.get() + " & " + box2.get());
    }
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------


//문제 22-1
class Box<T> {
    private T ob;     
    public void set(T o) { ob = o; }
    public T get() { return ob; }
}
class scannerex{
	public static void addBox(Box<? super Integer> b1, Box<? extends Integer> b2, Box<? extends Integer> b3) {
		b1.set(b2.get()+b3.get());
	}
	public static void main(String args[]) {
		Box<Integer> box1=new Box<>();
		box1.set(24);
		Box<Integer> box2=new Box<>();
		box2.set(37);
		Box<Integer> result=new Box<>();
		result.set(0);
		addBox(result,box1,box2);  //result에 24+37의 결과 저장.
		System.out.println(result.get());  //61출력
	}  
}


---------------------------------------------------------------------------------------------------------------------------------------------------------

//문제 22-2
class Box<T> {
    private T ob;     
    public void set(T o) { ob = o; }
    public T get() { return ob; }
}
class scannerex{
	//box에 con과 동일한 내용물이 들었는지 확인
	public static <T> boolean compBox(Box<? extends T> box,T con) {//Box인스턴스, 어떠한 형이든 여부와 관계없이 변수 1개.
		T bc=box.get();
		//box.set(con); //프로그래머의 실수로 삽입된 문장, 때문에 내용물이 바뀐다.
		return bc.equals(con);
	}
	
	public static void main(String args[]) {
		Box<Integer> box1=new Box<>();//Box인스턴스 생성
		box1.set(24);
		Box<String> box2=new Box<>();//Box인스턴스 생성
		box2.set("Poly");
		
		if(compBox(box1,25))
			System.out.println("상자 안에 25 저장");
		if(compBox(box2,"Moly"))
			System.out.println("상자 안에 Moly 저장");
	
		System.out.println(box1.get());
		System.out.println(box2.get());
		
	}
}
